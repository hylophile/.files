[language-server.pyright]
command = "basedpyright-langserver"
args = ["--stdio"]
# config = {}                         # buggy behaviour, you need a pyproject.toml and pyrightconfig.json

[[language]]
name = "python"
formatter = { command = "ruff", args = ["format", "--quiet", "-"] }
auto-format = true
roots = ["pyproject.toml"]
language-servers = ["pyright"]

[[language]]
name = "nix"
formatter = { command = "alejandra", args = [] }
auto-format = true


# doesn't actually work
# https://github.com/casey/just/pull/1933
# [[language]]
# name = "just"
# formatter = { command = "just", args = ["--dump"] }
# auto-format = true

# [[grammar]]
# name = "just"
# source = { git = "https://github.com/IndianBoy42/tree-sitter-just", rev = "8af0aab79854aaf25b620a52c39485849922f766" }
# newest doesn't work
# source = { git = "https://github.com/IndianBoy42/tree-sitter-just", rev = "379fbe36d1e441bc9414ea050ad0c85c9d6935ea" }

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["format", "-"] }
auto-format = true

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }
auto-format = true

[[language]]
name = "yaml"
formatter = { command = 'prettier', args = ["--parser", "yaml"] }
auto-format = true

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "tsx"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "markdown"
formatter = { command = 'prettier', args = ["--parser", "markdown"] }
auto-format = true

[[language]]
name = "svelte"
formatter = { command = 'prettier', args = ["--parser", "svelte"] }
auto-format = true
language-servers = ["svelteserver", "tailwindcss-ls"]

[[language]]
name = "devicetree"
file-types = ["dts", "dtsi", "keymap"]

[[language]]
name = "typst"
language-servers = ["tinymist"]
formatter = { command = "typstyle" }
auto-format = true

[language-server.tinymist.config.preview.background]
enabled = true

[[language]]
name = "css"
file-types = ["css"]

[[language]]
name = "scheme"
formatter = { command = "raco", args = ["fmt", "-i"] }
auto-format = true
language-servers = ["steel-language-server"]

# For development
[language-server.steel-language-server]
command = "steel-language-server"
args = []


[[language]]
name = "svelte"
language-servers = ["tailwindcss-ls", "svelteserver"]

[language-server.zk]
command = "zk"
args = ["lsp"]

[[language]]
name = "markdown"
injection-regex = "md|markdown"
language-servers = [{ name = "zk" }, { name = "marksman" }]
roots = [".zk"]
scope = "source.md"
file-types = ["md"]

[[language]]
name = "common-lisp"
# formatter = { command = 'cljfmt', args = ["fix", "--quiet", "-"] }
# formatter = { command = 'zprint' }
formatter = { command = 'raco', args = ["fmt"] }
auto-format = true

[[language]]
name = "rust"
[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'
[language-server.rust-analyzer]
command = "ra-multiplex"

[language-server.lean]
command = "lean"
args = [ "--server" ] 
