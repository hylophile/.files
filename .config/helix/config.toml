# theme = "modus_vivendi_tritanopia"

# theme = "my_modus"
# theme = "my_poimandres"
# theme = "my_default"
theme = "my_flatwhite"

[editor]
gutters = ["diagnostics", "line-numbers", "diff"]
line-number = "relative"
cursorline = true
auto-save = true
auto-format = true
color-modes = true
jump-label-alphabet = "ntesirlpfuywdhcxqoa"
completion-trigger-len = 1
soft-wrap.enable = true


statusline.right = [
  "diagnostics",
  "version-control",
  "selections",
  "register",
  "position",
  "position-percentage",
  "file-encoding",
]

cursor-shape.insert = "bar"
cursor-shape.normal = "block"
cursor-shape.select = "underline"

indent-guides.render = true
indent-guides.character = "┆"
indent-guides.skip-levels = 1

lsp.display-inlay-hints = true

file-picker.hidden = false

# end-of-line-diagnostics = "hint"
# [editor.inline-diagnostics]
# cursor-line = "warning" # show warnings and errors on the cursorline inline

[editor.word-completion]
enable = true
# Set the trigger length lower so that words are completed more often
trigger-length = 4

[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'

[editor.whitespace.render]
space = "none"
tab = "none"
nbsp = "none"
nnbsp = "none"
# newline = "all"


[editor.whitespace.characters]
newline = "↩"

[keys.insert]
C-q = ":q"
A-x = "command_palette"
C-s = ["commit_undo_checkpoint", ":write"]


# readline bindings
C-a = "goto_first_nonwhitespace"
C-e = ["goto_line_end", "move_char_right"]
A-b = "move_prev_word_start"
A-f = "move_next_word_end"
C-f = "move_char_right"
C-b = "move_char_left"
# default
# Ctrl-w, Alt-Backspace	Delete previous word	delete_word_backward
# Alt-d,  Alt-Delete	Delete next word	delete_word_forward
# Ctrl-u, Delete to start of line	kill_to_line_start
# Ctrl-k, Delete to end of line	kill_to_line_end

[keys.normal.space]
q.q = ":quit"
q.r = ":config-reload"
q.o = ":config-open"
q.f = ":format"
q.j = [":write", ":sh just --fmt --unstable", ":reload", ":write"]
"F" = "file_picker_in_current_buffer_directory"
z = ":lsp-restart"
",".b = ":sh gh browse %{buffer_name}:%{cursor_line} --no-browser --commit=$(git rev-parse HEAD) | wl-copy &"

[keys.select]
"{" = "goto_prev_paragraph"
"}" = "goto_next_paragraph"
h = "flip_selections"
l = "goto_word"
ret = 'extend_to_word'


[keys.normal]
C-q = ":q"
# A-x = "command_palette"
C-s = ":w"
C-j = "save_selection"
Z.Z = ":x"
G = "goto_file_end"

"{" = "goto_prev_paragraph"
"}" = "goto_next_paragraph"
h = "flip_selections"
ret = 'goto_word'

# Moving around
H = 'extend_char_left'
J = 'extend_line_down'
K = 'extend_line_up'
L = 'extend_char_right'

# Left-right motions
f = ['ensure_selections_forward', 'extend_next_char']
t = ['ensure_selections_forward', 'extend_till_char']
F = ['ensure_selections_forward', 'flip_selections', 'extend_prev_char']
T = ['ensure_selections_forward', 'flip_selections', 'extend_till_prev_char']

# Word motions
W = 'extend_next_word_start'
E = 'extend_next_word_end'
B = 'extend_prev_word_start'

A-w = 'move_next_long_word_start'
A-e = 'move_next_long_word_end'
A-b = 'move_prev_long_word_start'

A-W = 'extend_next_long_word_start'
A-E = 'extend_next_long_word_end'
A-B = 'extend_prev_long_word_start'

# Line motions
A-h = ['ensure_selections_forward', 'flip_selections', 'extend_to_line_start']
A-l = ['ensure_selections_forward', 'extend_to_line_end']

X = ['extend_to_line_bounds', 'ensure_selections_forward', 'flip_selections']

# Paragraph motions
# '{' = ['ensure_selections_forward', 'flip_selections', 'select_mode', 'goto_prev_paragraph', 'exit_select_mode']
# '}' = ['ensure_selections_forward', 'select_mode', 'goto_next_paragraph', 'exit_select_mode']

# Various motions
# G.e = ['select_mode', 'ensure_selections_forward', 'goto_file_end', 'exit_select_mode']
m.x = ['extend_to_line_bounds', 'trim_selections']
M = ['select_mode', 'match_brackets', 'exit_select_mode']

# Join and keep matching selections
A-j = 'join_selections'
A-k = 'keep_selections'
