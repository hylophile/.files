#+title: Sway
#+property: header-args:conf-space :tangle "config" :comments link
#+property: header-args:sh :shebang #!/usr/bin/env sh :mkdirp yes
#+startup: fold


#+begin_src emacs-lisp :results silent
(defun on-nsa (str)
   (if (string= "nsa" (system-name)) str ""))

(defun on-rook (str)
   (if (string= "rook" (system-name)) str ""))
#+end_src

* Settings

#+begin_src conf-space
set $mod Mod4
# Home row direction keys, like vim
set $left Left
set $down Down
set $up Up
set $right Right
# Your preferred terminal emulator
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

set $font pango:Jost*
set $weight Light
set $size 12

font $font $size


# default_border none
focus_follows_mouse no
workspace_auto_back_and_forth yes
title_align center
workspace_layout tabbed
# hide_edge_borders --i3 smart
hide_edge_borders smart

floating_modifier $mod normal

titlebar_border_thickness 0
titlebar_padding 5 0
#+end_src

* Variables

#+begin_src conf-space

#+end_src

* Outputs

#+begin_src conf-space
output "Unknown 2460G4 0x00000BD5" {
    resolution 1920x1080
    position 0,0
}

output "Unknown 2460G4 E99GBBA003029" {
    resolution 1920x1080
    position 0,0
}

output "BenQ Corporation BenQ EW3270U W8L04567019" {
    resolution 3840x2160
    position 1920,0
    scale 1.5
}

output eDP-1 {
    disable
}

output * background "#000000" solid_color
#+end_src

* Inputs

#+begin_src conf-space
input 4617:13404:"https://github.com/stapelberg"_"kinT_(kint41)" {
    xkb_options compose:rwin
}

set $slimblade 1149:8257:Kensington_Slimblade_Trackball

input 1149:8257:Kensington_Slimblade_Trackball {
    drag enabled
    middle_emulation enabled
}

bindsym --input-device=$slimblade --whole-window BTN_MIDDLE seat - cursor press button8
bindsym --input-device=$slimblade --whole-window --release BTN_MIDDLE seat - cursor release button8

bindsym --input-device=$slimblade --whole-window BTN_SIDE seat - cursor press button9
bindsym --input-device=$slimblade --whole-window --release BTN_SIDE seat - cursor release button9
#+end_src

* Startup

#+begin_src conf-space :noweb yes
exec swaybg --color "#000000"

<<mullvad()>>

exec env RUST_BACKTRACE=1 RUST_LOG=swayr=debug swayrd > /tmp/swayrd.log 2>&1

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#+end_src

#+name: mullvad
#+begin_src elisp
(on-rook "exec mullvad-vpn")
#+end_src

* Key bindings

** General

#+begin_src conf-space

set $term kitty
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+q kill

# Start your launcher
set $menu wofi --show drun -I | xargs swaymsg exec --
bindsym $mod+d exec $menu

# Reload the configuration file
bindsym $mod+Shift+r reload

bindsym $mod+Shift+Control+e exec swaymsg exit

bindsym button2 kill
# bindsym BTN_MIDDLE kill
bindsym button3 move container to output left

bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right


bindsym $mod+h splith
bindsym $mod+v splitv

# bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+s layout toggle split

bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
# bindsym $mod+Shift+space floating toggle

bindsym $mod+Ctrl+f focus mode_toggle

# focus the parent container
# bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+period move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+period scratchpad show

# Swap focus between the tiling area and the floating area
bindsym $mod+Shift+f floating toggle

bindsym $mod+space focus output left
bindsym $mod+Control+space exec ~/.config/sway/swap-visible-workspaces.sh
bindsym $mod+Shift+space move window to output left

bindsym $mod+e workspace next_on_output
bindsym $mod+Shift+e move container to workspace next_on_output
bindsym $mod+u workspace prev_on_output
bindsym $mod+Shift+u move container to workspace prev_on_output
bindsym $mod+b workspace back_and_forth


bindsym $mod+a exec env RUST_BACKTRACE=1 \
    swayr switch-window >> /tmp/swayr.log 2>&1

# bindsym $mod+Delete exec env RUST_BACKTRACE=1 \
#     swayr quit-window >> /tmp/swayr.log 2>&1

bindsym $mod+p exec env RUST_BACKTRACE=1 \
    swayr switch-to-urgent-or-lru-window >> /tmp/swayr.log 2>&1

#+end_src

** Workspace numbers

#+begin_src conf-space
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
#+end_src

** (move to) new workspace

#+begin_src conf-space
bindsym $mod+n exec ~/.config/sway/new-workspace.sh
#+end_src

#+begin_src sh :tangle ~/.config/sway/new-workspace.sh
workspaces=$(swaymsg -t get_workspaces | jq ".[] .num" | sort -g)
new_workspace=-1

for i in $(seq 1 10)
do
    if ! echo "$workspaces" | grep --quiet "$i\$"; then
        new_workspace=$i
        break
    fi
done

if [ "$new_workspace" != -1 ]; then
    swaymsg workspace "$new_workspace"
fi
#+end_src

#+begin_src conf-space
bindsym $mod+Shift+n exec sh ~/.config/sway/move-to-new-workspace.sh
#+end_src

#+begin_src sh :tangle ~/.config/sway/move-to-new-workspace.sh
workspaces=$(swaymsg -t get_workspaces | jq ".[] .num" | sort -g)
new_workspace=-1

for i in $(seq 1 10)
do
    if ! echo "$workspaces" | grep --quiet "$i\$"; then
        new_workspace=$i
        break
    fi
done

if [ "$new_workspace" != -1 ]; then
    swaymsg move container to workspace number "$new_workspace"
fi
#+end_src

*** TODO refactor

** Audio

#+begin_src conf-space
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
#+end_src

#+begin_src conf-space
bindsym XF86Mail exec ~/scripts/toggle-all-sources.sh

bindcode --release --no-repeat 199 exec ~/scripts/mute-all-sources.sh 1
bindcode 199 exec ~/scripts/mute-all-sources.sh 0

#+end_src

** Misc

#+begin_src conf-space
# select screenshot to clipboard
bindsym $mod+z exec grim -s 1 -g "$(slurp)" - | wl-copy
# color picker to clipboard
bindsym $mod+F12 exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy

bindsym $mod+j exec rofimoji --selector wofi --skin-tone neutral

bindsym $mod+F1 exec sh ~/scripts/toggle-work.sh

#+end_src

** t

#+begin_src conf-space

#+end_src

* Window-specific settings

#+begin_src conf-space
for_window    [app_id="chrome-mailsrv.employer__owa_-Default"] title_format "<span foreground='#0072C6'><tt></tt></span> %title"
for_window    [app_id="chrome-teams.microsoft.com__-Default"] title_format "<span foreground='#7B83EC'><tt></tt></span> %title"
for_window    [app_id="chrome-discord.com__app-Default" title="Discord"]            title_format "<span foreground='#33BFFF'><tt></tt></span> %title"
for_window    [app_id="firefox.*"]            title_format "<span foreground='#33BFFF'><tt></tt></span> %title"
for_window    [app_id="emacs"]            title_format "<span foreground='#FF79C6' face='file-icons'></span> %title"
for_window    [app_id="kitty"]              title_format "<span foreground='#50fa7b' face='Recursive Mono Casual Static'><b>λ</b></span> %title"
for_window    [app_id="telegramdesktop"]        title_format "<span foreground='#0088CC'><tt></tt></span> %title"
for_window    [app_id="org.kde.dolphin"]        title_format "<span foreground='#33BFFF'></span> %title"
for_window    [app_id="mpv"]        title_format "<span foreground='#e557e5'></span> %title"
for_window    [class="Mullvad VPN"]        floating disable, move container to workspace number 10, urgent deny
for_window    [instance="mullvad vpn"]        urgent deny
for_window [app_id="firefox.*" title="Picture-in-Picture"] floating enable, border none, resize set width 30ppt height 30ppt
for_window [app_id="firefox.*" title=".* — Sharing Indicator"] floating enable, move container to workspace number 10

#for_window [app_id="^chrome-.*__-.*$"] shortcuts_inhibitor disable

for_window [app_id="^chrome-.*"] shortcuts_inhibitor disable
#+end_src

* Modes

** Resize

#+begin_src conf-space
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    # bindsym Left resize shrink width 10px
    # bindsym Down resize grow height 10px
    # bindsym Up resize shrink height 10px
    # bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
#+end_src

* Colors

#+begin_src conf-space
# class                 border  bground text    indicator child_border
client.focused          #44475A #44475A #F8F8F2 #44475A   #44475A
client.focused_inactive #44475A #44475A #BFBFBF #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #50fa7b #44475a #50fa7b #FF5555   #FF5555
# client.urgent          #44475A #44475A #F8F8F2 #44475A   #44475A
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36
#+end_src

* Bar

#+begin_src conf-space
bar {
    swaybar_command waybar
    # position top

    # # When the status_command prints a new line to stdout, swaybar updates.
    # # The default just shows the current date and time.
    # status_command while date +'W%W   %A   %Y-%m-%d   %H:%M %p'; do sleep 60; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}
#+end_src

* Fin

#+begin_src conf-space
include /etc/sway/config.d/*
#+end_src

# Local Variables:
# eval: (add-hook 'after-save-hook (cmd! (ignore-errors (org-babel-execute-buffer))) t t)
# eval: (add-hook 'after-save-hook #'org-babel-tangle t t)
# End:
