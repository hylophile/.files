(defun kzk-live-term ()
  (interactive)
  (let ((fr "kzk-live-frontend")
        (br "kzk-live-backend")
        (ws "kzk-live")
        (kill-buffer-query-functions nil))
  (when (get-buffer fr) (kill-buffer fr))
  (when (get-buffer br) (kill-buffer br))
  (when (+workspace-exists-p ws) (+workspace-delete ws))
  (+workspace/new ws)
  (vterm fr)
  (comint-send-string fr "cd ~/code/kzk-od-local-test\n")
  (comint-send-string fr "live-server --port=13338 --no-browser local-test\n")
  (evil-window-vsplit)
  (vterm br)
  (comint-send-string br "cd ~/code/dicos\n")
  (comint-send-string br "air\n")
  (+workspace/other)
  ))


;; (add-hook! rjsx-mode #'tide-setup)
;; (after! (flycheck tide)
;;   (flycheck-add-mode 'javascript-tide 'rjsx-mode))

;; (defun my/jstide ()
;;   (flycheck-add-next-checker 'lsp 'javascript-tide 'append))

;; (defun my/eslintfix ()
;;   (when (eq major-mode 'rjsx-mode) (lsp-eslint-fix-all)))

;; (add-hook 'before-save-hook #'my/eslintfix)
;; (add-hook 'lsp-after-initialize-hook #'my/jstide)

(defun ui-connector-run ()
  (interactive)
  (let ((fr "ui-connector-frontend")
        (br "ui-connector-backend")
        (ws "uic-local")
        (kill-buffer-query-functions nil))
  (when (get-buffer fr) (kill-buffer fr))
  (when (get-buffer br) (kill-buffer br))
  (when (+workspace-exists-p ws) (+workspace-delete ws))
  (+workspace/new ws)
  (vterm fr)
  (comint-send-string fr "cd ~/code/ui-connector\n")
  (comint-send-string fr "npm run serve\n")
  (evil-window-vsplit)
  (vterm br)
  (comint-send-string br "cd ~/code/eaas\n")
  (comint-send-string br "make run-dev\n")
  (comint-send-string br "make logs-dev\n")
  (+workspace/other)
  ))
