#+title: UserChrome
#+property: header-args :results silent
* Setup
We create symbolic links in every firefox profile which link to one =userChrome.css=.
#+name: setup
#+begin_src emacs-lisp
(dolist (profile-dir (directory-files "./dir" t))
  (when (and (file-directory-p profile-dir)
             (file-exists-p (concat profile-dir "/extensions.json")))
    (let* ((chrome-dir (concat profile-dir "/chrome"))
           (user-chrome (concat chrome-dir "/userChrome.css")))
      (make-directory chrome-dir t)
      (make-symbolic-link "../../../userChrome.css" user-chrome t))))
#+end_src

* CSS
We just need to convince org to evaluate the src block above whenever we tangle this file. To achieve that, we evaluate our setup block in a CSS comment.
#+begin_src css :noweb yes :tangle userChrome.css
/* <<setup()>> */

.main {
    color: blue;
}
#+end_src
